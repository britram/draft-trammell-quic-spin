



QUIC                                                    B. Trammell, Ed.
Internet-Draft                                             M. Kuehlewind
Intended status: Experimental                                 ETH Zurich
Expires: September 24, 2018                               March 23, 2018


          The Latency Spin Bit for the QUIC Transport Protocol
                draft-trammell-quic-spinbit-delta-latest

Abstract

   This document specifies the experimental addition of a latency spin
   bit to the QUIC transport protocol and describes how to use it to
   measure end-to-end latency.  It is intended as a delta to the current
   specification of QUIC.  An appendix describes the Valid Edge Counter
   mechanism, which increases the utility of the spin bit in less than
   ideal network and traffic conditions without using the QUIC packet
   number.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on September 24, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (https://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of



Trammell & Kuehlewind  Expires September 24, 2018               [Page 1]

Internet-Draft                QUIC Spin Bit                   March 2018


   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
     1.1.  About This Document . . . . . . . . . . . . . . . . . . .   3
   2.  The Spin Bit Mechanism  . . . . . . . . . . . . . . . . . . .   3
     2.1.  Proposed Short Header Format Including Spin Bit . . . . .   3
   3.  Using the Spin Bit for Passive RTT Measurement  . . . . . . .   4
     3.1.  Limitations . . . . . . . . . . . . . . . . . . . . . . .   4
     3.2.  Illustration  . . . . . . . . . . . . . . . . . . . . . .   5
   4.  Experimental Evaluation . . . . . . . . . . . . . . . . . . .   7
   5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   6.  Security and Privacy Considerations . . . . . . . . . . . . .   7
   7.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   8
   8.  Informative References  . . . . . . . . . . . . . . . . . . .   8
   Appendix A.  The Valid Edge Counter . . . . . . . . . . . . . . .   9
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10

1.  Introduction

   The QUIC transport protocol [QUIC-TRANS] is a UDP-encapsulated
   protocol integrated with Transport Layer Security (TLS) [TLS] to
   encrypt most of its protocol internals, beyond those handshake
   packets needed to establish or resume a TLS session, and information
   required to decrypt QUIC packets and to route QUIC packets to the
   correct machine in a load-balancing situation (the connection ID).
   In contrast to TCP, QUIC's wire image (see [WIRE-IMAGE]) exposes much
   less information about transport protocol state than TCP's wire
   image.  Specifically, the fact that sequence and acknowledgement
   numbers and timestamps (available in TCP) cannot be seen by on-path
   observers in QUIC means that passive TCP loss and latency measurement
   techniques that rely on this information (e.g.  [CACM-TCP],
   [TMA-QOF]) cannot be easily ported to work with QUIC.

   This document proposes a solution to this problem by adding an
   explicit signal for passive latency measurability to the QUIC short
   header: a "spin bit".  Observation of the spin bit provides one RTT
   sample per RTT to passive observers of QUIC traffic.  This document
   describes the mechanism, how it can be added to QUIC, and how it can
   be used by passive measurement facilities to generate RTT samples.

   Appendix A specifies an additional Valid Edge Counter, which can be
   used to improve the fidelity of spin bit measurements under less than
   ideal network and/or traffic conditions.





Trammell & Kuehlewind  Expires September 24, 2018               [Page 2]

Internet-Draft                QUIC Spin Bit                   March 2018


1.1.  About This Document

   This document is maintained in the GitHub repository
   https://github.com/britram/draft-trammell-quic-spin, and the editor's
   copy is available online at https://britram.github.io/draft-trammell-
   quic-spin.  Current open issues on the document can be seen at
   https://github.com/britram/draft-trammell-quic-spin/issues.  Comments
   and suggestions on this document can be made by filing an issue
   there, or by contacting the editor.

2.  The Spin Bit Mechanism

   The latency spin bit enables latency monitoring from observation
   points on the network path.  Each endpoint, client and server,
   maintains a spin value, 0 or 1, for each QUIC connection, and sets
   the spin bit on packets it sends for that connection to the
   appropriate value (below).  It also maintains the highest packet
   number seen from its peer on the connection.  The value is then
   determined at each endpoint as follows:

   o  The server initializes its spin value to 0.  When it receives a
      packet from the client, if that packet has a short header and if
      it increments the highest packet number seen by the server from
      the client, it sets the spin value to the spin bit in the received
      packet.

   o  The client initializes its spin value to 0.  When it receives a
      packet from the server, if the packet has a short header and if it
      increments the highest packet number seen by the client from the
      server, it sets the spin value to the opposite of the spin bit in
      the received packet.

   This procedure will cause the spin bit to change value in each
   direction once per round trip.  Observation points can estimate the
   network latency by observing these changes in the latency spin bit,
   as described in Section 3.  See Section 3.2 for an illustration of
   this mechanism in action.

2.1.  Proposed Short Header Format Including Spin Bit

   Since it is possible to measure handshake RTT without a spin bit, it
   is sufficient to include the spin bit in the short packet header.
   The spin bit therefore appears only after version negotiation and
   connection establishment are completed.  As of version -10 of
   [QUIC-TRANS], this proposal specifies using the fifth most
   significant bit (0x08) of the first octet in the short header for the
   spin bit.




Trammell & Kuehlewind  Expires September 24, 2018               [Page 3]

Internet-Draft                QUIC Spin Bit                   March 2018


    0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+
   |0|K|1|1|0|S|T T|
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                Destination Connection ID (0..144)           ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                      Packet Number (8/16/32)                ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                     Protected Payload (*)                   ...
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


         Figure 1: Short Header Format including proposed Spin Bit

   This change limits the number of available short packet types to 4.
   The short packet type definitions are unchanged.

3.  Using the Spin Bit for Passive RTT Measurement

   When a QUIC flow is sending at full rate (i.e., neither application
   nor flow control limited), the latency spin bit in each direction
   changes value once per round-trip time (RTT).  An on-path observer
   can observe the time difference between edges in the spin bit signal
   in a single direction to measure one sample of end-to-end RTT.  Note
   that this measurement, as with passive RTT measurement for TCP,
   includes any transport protocol delay (e.g., delayed sending of
   acknowledgements) and/or application layer delay (e.g., waiting for a
   request to complete).  It therefore provides devices on path a good
   instantaneous estimate of the RTT as experienced by the application.
   A simple linear smoothing or moving minimum filter can be applied to
   the stream of RTT information to get a more stable estimate.

   An on-path observer that can see traffic in both directions (from
   client to server and from server to client) can also use the spin bit
   to measure "upstream" and "downstream" component RTT; i.e, the
   component of the end-to-end RTT attributable to the paths between the
   observer and the server and the observer and the client,
   respectively.  It does this by measuring the delay between a spin
   edge observed in the upstream direction and that observed in the
   downstream direction, and vice versa.

3.1.  Limitations

   Application-limited and flow-control-limited senders can have
   application and transport layer delay, respectively, that are much
   greater than network RTT.  Therefore, the spin bit provides network
   latency information only when the sender is neither application nor



Trammell & Kuehlewind  Expires September 24, 2018               [Page 4]

Internet-Draft                QUIC Spin Bit                   March 2018


   flow control limited.  When the sender is application-limited by
   periodic application traffic, where that period is longer than the
   RTT, measuring the spin bit provides information about the
   application period, not the RTT.  Simple heuristics based on the
   observed data rate per flow or changes in the RTT series can be used
   to reject bad RTT samples due to application or flow control
   limitation.

   Since the spin bit logic at each endpoint considers only samples on
   packets that advance the largest packet number seen, signal
   generation itself is resistant to reordering and loss.  However,
   reordering can cause problems at an observer by causing spurious edge
   detection and therefore low RTT estimates, if reordering occurs
   across a spin bit flip in the stream.  Similarly, should an edge be
   lost in a burst of lost packets, causing a delayed edge detection and
   therefore high RTT estimates.  When the packet number is observable,
   observation of the packet number can be used to reject lost and
   reordered edges.

   See also Appendix A for a proposed enhancement which addresses all of
   these limitations, even when the packet number is encrypted.

3.2.  Illustration

   To illustrate the operation of the spin bit, we consider a simplified
   model of a single path between client and server as a queue with
   slots for five packets, and assume that both client and server send
   packets at a constant rate.  If each packet moves one slot in the
   queue per clock tick, note that this bidirectional path has a RTT of
   10 ticks.

   Initially, during connection establishment, no packets with a spin
   bit are in flight, as shown in Figure 2.

   +--------+   -  -  -  -  -   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   -  -  -  -  -   +--------+

      Figure 2: Initial state, no spin bit between client and server

   Either the server, the client, or both can begin sending packets with
   short headers after connection establishment, as shown in Figure 3;
   here, no spin edges are yet in transit.






Trammell & Kuehlewind  Expires September 24, 2018               [Page 5]

Internet-Draft                QUIC Spin Bit                   March 2018


   +--------+   0  0  -  -  -   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   -  -  0  0  0   +--------+

       Figure 3: Client and server begin sending packets with spin 0

   Once the server's first 0-marked packet arrives at the client, the
   client sets its spin value to 1, and begins sending packets with the
   spin bit set, as shown in Figure 4.  The spin edge is now in transit
   toward the server.

   +--------+   1  0  0  0  0   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   0  0  0  0  0   +--------+

                     Figure 4: The bit begins spinning

   Five ticks later, this packet arrives at the server, which takes its
   spin value from it and reflects that value back on the next packet it
   sends, as shown in Figure 5.  The spin edge is now in transit toward
   the client.

   +--------+   1  1  1  1  1   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   0  0  0  0  1   +--------+

                  Figure 5: Server reflects the spin edge

   Five ticks later, the 1-marked packet arrives at the client, which
   inverts its spin value and sends the inverted value on the next
   packet it sends, as shown in Figure 6.

         obs. points  X  Y
   +--------+   0  1  1  1  1   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   1  1  1  1  1   +--------+
                         Y

                  Figure 6: Client inverts the spin edge




Trammell & Kuehlewind  Expires September 24, 2018               [Page 6]

Internet-Draft                QUIC Spin Bit                   March 2018


   Here we can also see how measurement works.  An observer watching the
   signal at single observation point X in Figure 6 will see an edge
   every 10 ticks, i.e. once per RTT.  An observer watching the signal
   at a symmetric observation point Y in Figure 6 will see a server-
   client edge 4 ticks after the client-server edge, and a client-server
   edge 6 ticks after the server-client edge, allowing it to compute
   component RTT.

   Figure 7 shows how this mechanism works in the presence of
   reordering.  Here, packet C carries the spin edge, and packet B is
   reordered on the way to the client.  In this case, the client will
   begin sending spin 1 after the arrival of C, and ignore the spin bit
   flip to 1 on packet B, since B < C; i.e. it does not increment the
   highest packet number seen.

   +--------+   0  0  0  0  0   +--------+
   |        |     -------->     |        |
   | Client |                   | Server |
   |        |     <--------     |        |
   +--------+   1  0  1  0  0   +--------+
       PN=      A  C  B  D  E

                       Figure 7: Handling reordering

4.  Experimental Evaluation

   This document specifies an experimental delta to the QUIC transport
   protocol.  Specifically, this experimentation is intended to
   determine:

   o  the impact of the addition of the latency spin bit on
      implementation and specification complexity; and

   o  the accuracy and value of the information derived from spin bit
      measurement on live network traffic.

5.  IANA Considerations

   This document has no actions for IANA.

6.  Security and Privacy Considerations

   The spin bit is intended to expose end-to-end RTT to observers along
   the path, so the privacy considerations for the latency spin bit are
   essentially the same as those for passive RTT measurement in general.






Trammell & Kuehlewind  Expires September 24, 2018               [Page 7]

Internet-Draft                QUIC Spin Bit                   March 2018


7.  Acknowledgments

   This document is derived from [I-D.trammell-quic-spin], which was the
   work of the following authors in addition to the editor:

   o  Piet De Vaere, ETH Zurich

   o  Roni Even, Huawei

   o  Giuseppe Fioccola, Telecom Italia

   o  Thomas Fossati, Nokia

   o  Marcus Ihlar, Ericsson

   o  Al Morton, AT&T Labs

   o  Emile Stephan, Orange

   The QUIC Spin Bit was originally specified by Christian Huitema, and
   the Valid Edge Counter mechanism in Appendix A was first specified by
   Piet De Vaere.

   This work is partially supported by the European Commission under
   Horizon 2020 grant agreement no. 688421 Measurement and Architecture
   for a Middleboxed Internet (MAMI), and by the Swiss State Secretariat
   for Education, Research, and Innovation under contract no. 15.0268.
   This support does not imply endorsement.

8.  Informative References

   [CACM-TCP]
              Strowes, S., "Passively Measuring TCP Round-Trip Times (in
              Communications of the ACM)", October 2013.

   [I-D.trammell-quic-spin]
              Trammell, B., Vaere, P., Even, R., Fioccola, G., Fossati,
              T., Ihlar, M., Morton, A., and S. Emile, "The Addition of
              a Spin Bit to the QUIC Transport Protocol", draft-
              trammell-quic-spin-01 (work in progress), December 2017.

   [QUIC-TRANS]
              Iyengar, J. and M. Thomson, "QUIC: A UDP-Based Multiplexed
              and Secure Transport", draft-ietf-quic-transport-10 (work
              in progress), March 2018.






Trammell & Kuehlewind  Expires September 24, 2018               [Page 8]

Internet-Draft                QUIC Spin Bit                   March 2018


   [TLS]      Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", draft-ietf-tls-tls13-28 (work in progress),
              March 2018.

   [TMA-QOF]  Trammell, B., Gugelmann, D., and N. Brownlee, "Inline Data
              Integrity Signals for Passive Measurement (in Proc. TMA
              2014)", April 2014.

   [WIRE-IMAGE]
              Trammell, B. and M. Kuehlewind, "The Wire Image of a
              Network Protocol", draft-trammell-wire-image-02 (work in
              progress), February 2018.

Appendix A.  The Valid Edge Counter

   The Valid Edge Counter (VEC) is an additional two bit signal,
   encoding values 0 to 3, that works together with the spin bit to help
   observers reject invalid RTT samples in the presence of loss,
   reordering, and delayed edges due to application-limited senders.

   To implement the VEC mechanism in addition to the spin bit:

   o  Each sender maintains a VEC value, containing the VEC on the last
      spin edge (a packet that changes the spin value) it received from
      its peer.

   o  The sender sets the VEC to 0 on any packet not containing a spin
      edge, or containing a delayed spin edge (a packet that has a spin
      bit different than the last packet sent, but sent more than a
      certain amount of time after the incoming packet that changed the
      spin value).

   o  The sender sets the VEC to its VEC value plus 1 on any packet
      containing a non-delayed spin edge.

   Note that unlike the spin bit, the VEC mechanism is the same on both
   the client and the server.  The endpoints still use the packet number
   to decide whether or not to update their spin values.

   When measuring RTT using the spin bit with VEC, only edges containing
   VEC 3 will be used to generate RTT samples.

   This mechanism allows observers to recognize spurious edges due to
   reordering and delayed edges due to loss, since these packets will
   have been sent with VEC 0: they were not edges when they were sent.
   In addition, it allows senders to signal that a valid edge was
   delayed because the sender was application-limited.




Trammell & Kuehlewind  Expires September 24, 2018               [Page 9]

Internet-Draft                QUIC Spin Bit                   March 2018


Authors' Addresses

   Brian Trammell (editor)
   ETH Zurich

   Email: ietf@trammell.ch


   Mirja Kuehlewind
   ETH Zurich

   Email: mirja.kuehlewind@tik.ee.ethz.ch







































Trammell & Kuehlewind  Expires September 24, 2018              [Page 10]
